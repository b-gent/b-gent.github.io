:orphan:

.. title:: MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS

.. option:: CONFIG_MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS

*Enable MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS*

Type: ``bool``

Help
====

Enable support for one and zeros padding for CBC cipher functions in mbedTLS.
That is, fill buffer with 80 00 .. 00.

Direct dependencies
===================

\ :option:`MBEDTLS_CIPHER_MODE_CBC <CONFIG_MBEDTLS_CIPHER_MODE_CBC>` && \ :option:`MBEDTLS_AES_C <CONFIG_MBEDTLS_AES_C>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(Includes any dependencies from ifs and menus.)*

Default
=======

- y

Kconfig definition
==================

.. highlight:: kconfig

At ``C:/Git/ncs/nrfxlib\nrf_security/Kconfig:232``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:14``

Menu path: (Top) → Nordic nrfxlib → Nordic Security → Use Nordic provided security backend → AES   - Advanced Encryption Standard → AES-CBC - AES Cipher Block Chaining mode → CBC cipher padding modes

.. parsed-literal::

    config MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
    	bool "Enable MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS"
    	default y
    	depends on \ :option:`MBEDTLS_CIPHER_MODE_CBC <CONFIG_MBEDTLS_CIPHER_MODE_CBC>` && \ :option:`MBEDTLS_AES_C <CONFIG_MBEDTLS_AES_C>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`
    	help
    	  Enable support for one and zeros padding for CBC cipher functions in mbedTLS.
    	  That is, fill buffer with 80 00 .. 00.

*(The 'depends on' condition includes propagated dependencies from ifs and menus.)*