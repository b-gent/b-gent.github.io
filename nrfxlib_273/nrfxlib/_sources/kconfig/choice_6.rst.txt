:orphan:

.. title:: choice: Backend selection

.. _choice_6:

.. describe:: choice: Backend selection

*Backend selection*

Type: ``bool``

Direct dependencies
===================

\ :option:`MBEDTLS_ECP_C <CONFIG_MBEDTLS_ECP_C>` && \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` && \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` && \ :option:`MBEDTLS_ECP_C <CONFIG_MBEDTLS_ECP_C>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(Includes any dependencies from ifs and menus.)*

Default
=======

- \ :option:`CC310_MBEDTLS_ECP_C <CONFIG_CC310_MBEDTLS_ECP_C>`

Choice options
==============

- \ :option:`CC310_MBEDTLS_ECP_C <CONFIG_CC310_MBEDTLS_ECP_C>`
- \ :option:`VANILLA_MBEDTLS_ECP_C <CONFIG_VANILLA_MBEDTLS_ECP_C>`

Kconfig definition
==================

.. highlight:: kconfig

At ``C:/Git/ncs/nrfxlib\nrf_security/Kconfig:549``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:14``

Menu path: (Top) → Nordic nrfxlib → Nordic Security → Use Nordic provided security backend → ECC - Eliptic Curve Cryptography

.. parsed-literal::

    choice
    	bool "Backend selection"
    	default \ :option:`CC310_MBEDTLS_ECP_C <CONFIG_CC310_MBEDTLS_ECP_C>`
    	depends on \ :option:`MBEDTLS_ECP_C <CONFIG_MBEDTLS_ECP_C>` && \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` && \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` && \ :option:`MBEDTLS_ECP_C <CONFIG_MBEDTLS_ECP_C>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(The 'depends on' condition includes propagated dependencies from ifs and menus.)*