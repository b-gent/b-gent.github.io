:orphan:

.. title:: CC310_BACKEND

.. option:: CONFIG_CC310_BACKEND

*Use cc310 backend*

Type: ``bool``

Help
====

Enable cc310 backend

Direct dependencies
===================

(SOC_NRF52840 || (SOC_NRF9160 && TRUSTED_EXECUTION_SECURE) || (SOC_NRF9160 && !SPM)) && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(Includes any dependencies from ifs and menus.)*

Default
=======

- y

Symbols selected by this symbol
===============================

- \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` if \ :option:`MBEDTLS_VANILLA_BACKEND <CONFIG_MBEDTLS_VANILLA_BACKEND>`
- \ :option:`NRF_CC310_PLATFORM <CONFIG_NRF_CC310_PLATFORM>`

Kconfig definition
==================

.. highlight:: kconfig

At ``C:/Git/ncs/nrfxlib\nrf_security/Kconfig:76``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:14``

Menu path: (Top) → Nordic nrfxlib → Nordic Security → Use Nordic provided security backend

.. parsed-literal::

    menuconfig CC310_BACKEND
    	bool "Use cc310 backend"
    	default y
    	select \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` if \ :option:`MBEDTLS_VANILLA_BACKEND <CONFIG_MBEDTLS_VANILLA_BACKEND>`
    	select \ :option:`NRF_CC310_PLATFORM <CONFIG_NRF_CC310_PLATFORM>`
    	depends on (SOC_NRF52840 || (SOC_NRF9160 && TRUSTED_EXECUTION_SECURE) || (SOC_NRF9160 && !SPM)) && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`
    	help
    	  Enable cc310 backend

*(The 'depends on' condition includes propagated dependencies from ifs and menus.)*