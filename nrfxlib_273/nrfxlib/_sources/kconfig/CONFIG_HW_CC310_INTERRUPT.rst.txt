:orphan:

.. title:: HW_CC310_INTERRUPT

.. option:: CONFIG_HW_CC310_INTERRUPT

*Use interrupt version of nrf cc310 platform library*

*Use interrupt version of nrf cc310 platform and crypto libraries*

Type: ``bool``

Direct dependencies
===================

\ :option:`NRF_CC310_BL <CONFIG_NRF_CC310_BL>` || \ :option:`NRF_CC310_PLATFORM <CONFIG_NRF_CC310_PLATFORM>` || (\ :option:`CC310_BACKEND <CONFIG_CC310_BACKEND>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`)

*(Includes any dependencies from ifs and menus.)*

Default
=======

- n

Kconfig definitions
===================

.. highlight:: kconfig

At ``C:/Git/ncs/nrfxlib\crypto/Kconfig:21``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:13``

Menu path: (Top) → Nordic nrfxlib → Crypto libraries for nRF5x SOCs. → nrf_cc310_bl HW crypto library for nRF devices with CryptoCell CC310.

.. parsed-literal::

    config HW_CC310_INTERRUPT
    	bool
    	default n
    	depends on \ :option:`NRF_CC310_BL <CONFIG_NRF_CC310_BL>`

----

At ``C:/Git/ncs/nrfxlib\crypto/Kconfig:34``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:13``

Menu path: (Top) → Nordic nrfxlib → Crypto libraries for nRF5x SOCs. → nrf_cc310_platform HW crypto library for nRF devices with CryptoCell CC310.

.. parsed-literal::

    config HW_CC310_INTERRUPT
    	bool "Use interrupt version of nrf cc310 platform library" if !(\ :option:`CC310_BACKEND <CONFIG_CC310_BACKEND>` || \ :option:`NRF_CC310_BL <CONFIG_NRF_CC310_BL>`)
    	depends on \ :option:`NRF_CC310_PLATFORM <CONFIG_NRF_CC310_PLATFORM>`

----

At ``C:/Git/ncs/nrfxlib\nrf_security/Kconfig:91``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:14``

Menu path: (Top) → Nordic nrfxlib → Nordic Security → Use Nordic provided security backend → Use cc310 backend

.. parsed-literal::

    config HW_CC310_INTERRUPT
    	bool "Use interrupt version of nrf cc310 platform and crypto libraries"
    	depends on \ :option:`CC310_BACKEND <CONFIG_CC310_BACKEND>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(The 'depends on' condition includes propagated dependencies from ifs and menus.)*