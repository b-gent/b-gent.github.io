:orphan:

.. title:: CC310_MBEDTLS_AES_C

.. option:: CONFIG_CC310_MBEDTLS_AES_C

*cc310 (AES-128)*

Type: ``bool``

Direct dependencies
===================

\ :option:`CC310_BACKEND <CONFIG_CC310_BACKEND>` && \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` && \ :option:`MBEDTLS_AES_C <CONFIG_MBEDTLS_AES_C>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(Includes any dependencies from ifs and menus.)*

Default
=======

- y

Kconfig definition
==================

.. highlight:: kconfig

At ``C:/Git/ncs/nrfxlib\nrf_security/Kconfig:183``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:14``

Menu path: (Top) → Nordic nrfxlib → Nordic Security → Use Nordic provided security backend → AES   - Advanced Encryption Standard

.. parsed-literal::

    config CC310_MBEDTLS_AES_C
    	bool "cc310 (AES-128)"
    	default y
    	depends on \ :option:`CC310_BACKEND <CONFIG_CC310_BACKEND>` && \ :option:`NRF_CRYPTO_BACKEND_COMBINATION_0 <CONFIG_NRF_CRYPTO_BACKEND_COMBINATION_0>` && \ :option:`MBEDTLS_AES_C <CONFIG_MBEDTLS_AES_C>` && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(The 'depends on' condition includes propagated dependencies from ifs and menus.)*