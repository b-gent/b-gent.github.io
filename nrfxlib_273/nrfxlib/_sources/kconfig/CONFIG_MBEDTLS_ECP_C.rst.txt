:orphan:

.. title:: MBEDTLS_ECP_C

.. option:: CONFIG_MBEDTLS_ECP_C

*ECC - Eliptic Curve Cryptography*

Type: ``bool``

Help
====

Enable low level APIs for elliptic curves for
additional functionality (besides ECDH and ECDSA)
Enabling ECC will provide a sub-menu which allows for fine grained
configuration of ECC based features and specific cipher support.
Corresponds to MBEDTLS_ECP_C setting in mbed TLS config file.

Direct dependencies
===================

(\ :option:`CC310_BACKEND <CONFIG_CC310_BACKEND>` || \ :option:`MBEDTLS_VANILLA_BACKEND <CONFIG_MBEDTLS_VANILLA_BACKEND>`) && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`

*(Includes any dependencies from ifs and menus.)*

Default
=======

- y

Kconfig definition
==================

.. highlight:: kconfig

At ``C:/Git/ncs/nrfxlib\nrf_security/Kconfig:531``

Included via ``C:/Git/ncs/nrfxlib/Kconfig.nrfxlib:14``

Menu path: (Top) → Nordic nrfxlib → Nordic Security → Use Nordic provided security backend

.. parsed-literal::

    menuconfig MBEDTLS_ECP_C
    	bool "ECC - Eliptic Curve Cryptography"
    	default y
    	depends on (\ :option:`CC310_BACKEND <CONFIG_CC310_BACKEND>` || \ :option:`MBEDTLS_VANILLA_BACKEND <CONFIG_MBEDTLS_VANILLA_BACKEND>`) && \ :option:`NORDIC_SECURITY_BACKEND <CONFIG_NORDIC_SECURITY_BACKEND>`
    	help
    	  Enable low level APIs for elliptic curves for
    	  additional functionality (besides ECDH and ECDSA)
    	  Enabling ECC will provide a sub-menu which allows for fine grained
    	  configuration of ECC based features and specific cipher support.
    	  Corresponds to MBEDTLS_ECP_C setting in mbed TLS config file.

*(The 'depends on' condition includes propagated dependencies from ifs and menus.)*